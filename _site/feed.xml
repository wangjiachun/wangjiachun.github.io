<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jc Blog</title>
    <description>机器学习初级1段见习生 | 王嘉春，Web &amp; Mobile Lover，Front-End Engineer，UX Designer | 这里是 @Hux黄玄 的个人博客，与你一起发现更大的世界。</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 05 Jun 2016 20:53:31 +0800</pubDate>
    <lastBuildDate>Sun, 05 Jun 2016 20:53:31 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Hello Github</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“Yeah It’s on. ”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;section&quot;&gt;前言&lt;/h2&gt;

&lt;p&gt;Jc 的 Blog 就这么开通了。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#build&quot;&gt;跳过废话，直接看技术实现 &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2016 年， 总算有个地方可以好好写点东西了。&lt;/p&gt;

&lt;p&gt;作为一个程序员， Blog 这种轮子要是挂在大众博客程序上就太没意思了。一是觉得大部分 Blog 服务都太丑，二是觉得不能随便定制不好玩。之前因为太懒没有折腾，结果就一直连个写 Blog 的地儿都没有。&lt;/p&gt;

&lt;p id=&quot;build&quot;&gt;&lt;/p&gt;
&lt;hr /&gt;

&lt;h2 id=&quot;section-1&quot;&gt;正文&lt;/h2&gt;

&lt;p&gt;接下来说说搭建这个博客的技术细节。&lt;/p&gt;

&lt;p&gt;正好之前就有关注过 &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; + &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; 快速 Building Blog 的技术方案，非常轻松时尚。&lt;/p&gt;

&lt;p&gt;其优点非常明显：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Markdown&lt;/strong&gt; 带来的优雅写作体验&lt;/li&gt;
  &lt;li&gt;非常熟悉的 Git workflow ，&lt;strong&gt;Git Commit 即 Blog Post&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;利用 GitHub Pages 的域名和免费无限空间，不用自己折腾主机
    &lt;ul&gt;
      &lt;li&gt;如果需要自定义域名，也只需要简单改改 DNS 加个 CNAME 就好了&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Jekyll 的自定制非常容易，基本就是个模版引擎&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;配置的过程中也没遇到什么坑，基本就是 Git 的流程，相当顺手&lt;/p&gt;

&lt;p&gt;大的 Jekyll 主题上直接 fork 了 &lt;a href=&quot;https://github.com/Huxpro/huxpro.github.io&quot;&gt;Hux&lt;/a&gt;   Blog（这个主题也相当有名，就不多赘述了。唯一的缺点大概就是没有标签支持，于是我给它补上了。）&lt;/p&gt;

&lt;p&gt;首先是菜鸟第一次接触github，这对于英文渣和代码渣来说，都是一件及其f**k的事情．
这里简单介绍一下github,它是一个免费的开源项目托管工具，而不是一个编译器，我刚开始使用他的时候到处找可以写代码的地方，找可以编译的地方，最后看了一些博客才知道git只是一个存放项目的reposities,所以在gh上写代码这个想法一开始就是错误的．&lt;/p&gt;

&lt;p&gt;对于github上的一些按钮的功能网上介绍比较多，这里就不做介绍了．&lt;/p&gt;

&lt;p&gt;首先在github上注册一个账号，之后可以自己建一个demo仓库，或者fork别人的库练习．
github.com相当于一个服务器，我们可以直接在服务器上修改自己的文件，但是这种方法终归不好，容易引发许多不可挽回的失误，尤其对于大型项目，一个＇rm -rf＇就可能删除一个公司．所以把自己的项目复制到本地进行修改，然后再提交到服务器上是比较稳妥的做法．&lt;/p&gt;

&lt;p&gt;git clone http://gtihub.com/username/projectname&lt;/p&gt;

&lt;p&gt;username是自己的github账号，projectname是要下载的项目名字．现在我们有了自己的本地文件，在提交之前，本地所做的任何修改都不会影响到服务器．&lt;/p&gt;

&lt;p&gt;每个账号在github上只能有一个个人主页，并且必须是username.github.io的名称，虽然以后可以绑定自己的域名，但目前来看，我还是先走一下常规流程比较好．&lt;/p&gt;

&lt;p&gt;本地调试环境需要jekyll，为了安装jekyll需要几个依赖项ruby(安装rvm的过程中自动安装ruby) &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; &lt;a href=&quot;https://www.rvm.io/&quot;&gt;rvm&lt;/a&gt; nodejs&lt;/p&gt;

&lt;p&gt;jekyll3需要ruby2.0以上才能支持，所以，rvm安装时要显式指定ruby的版本，否则安装一个1.9的就很坑爹．&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;curl -sSL https://get.rvm.io&lt;/td&gt;
      &lt;td&gt;bash -s stable　　–ruby&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;之后安装＇gem install jekyll’，安装过程的压缩包许多都被墙了(ssl　error)，一开始不知道是因为墙的原因，网上各种搜无果，最后偶然试了一下重新输入命令，发现网站可以上了，于是开开心心的安装完成，之后打开本地网页的时候发生错误’cannot open such file, jekyll paginate’,然后用’gem list’查看列表发现没有这个东西，果断安装’gem install jekyll paginate’应该是jekyll模板的分页功能模块．现在输入＇jekyll serve’就可以开心地调试网页了，对于算法工程师来说，这个模板相对来说是比较省时省力的，个人博客可以做的好看又不用费心看一些html和css的东西．&lt;/p&gt;

&lt;p&gt;然后提交．&lt;/p&gt;

&lt;p&gt;git add –allrenshi&lt;/p&gt;

&lt;p&gt;git commit -m “commit description”&lt;/p&gt;

&lt;p&gt;git push -u origin master&lt;/p&gt;

&lt;p&gt;最后就进入了耗时反而最长的&lt;strong&gt;做图、写字&lt;/strong&gt;阶段，也算是进入了&lt;strong&gt;写博客&lt;/strong&gt;的正轨，类似 Hack Day 的方式去搭这个站的．&lt;/p&gt;

&lt;p&gt;##　参考github教程&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://rogerdudler.github.io/git-guide/index.zh.html&quot;&gt;git - 简明指南&lt;/a&gt;网站高大上&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://pages.github.com&quot;&gt;git-pages&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/purediy/archive/2013/03/07/2948892.html&quot;&gt;通过GitHub Pages建立个人站点&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section-2&quot;&gt;总结&lt;/h2&gt;

&lt;p&gt;对于这次艰难的建站之旅来说，主要是有这么两点收获．&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第一&lt;/strong&gt;  做项目也好，写代码也好，任何事做之前需要明确目标，知道自己在干什么．&lt;/p&gt;

&lt;p&gt;经常有这种事发生：计划今天去北京大学看知性妹子，从宿舍出发，等公交时突然口渴，就去买个西瓜解解渴，买完西瓜从超市出来看到学院路有一个大明星在露天表演，于是过去看了一小时，刚准备走，发现没带公交卡，时间也到了中午索性就下午再去，回去吃个饭，睡个午觉，一不小心睡到了下午５点，想想明天再去吧．&lt;/p&gt;

&lt;p&gt;当别人问我你今天干了什么的时候，我哑口无言．&lt;/p&gt;

&lt;p&gt;这个小段子虽然冗长但是比较有代表性，一部分人经常会被各种其他的诱惑和欲望所干扰，导致自己的目标发生了转移，最后想做的事情都没有做好，我们需要对自己负责，是要对自己的每一个行为的后果，发生的动机，以及这个行为在长期和短期目标中的价值多少有一个合理的认识．&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;第二&lt;/strong&gt;  与第一点相同，这很重要！&lt;/p&gt;

&lt;p&gt;2016.5.29 by Jc&lt;/p&gt;

</description>
        <pubDate>Mon, 30 May 2016 04:00:00 +0800</pubDate>
        <link>/2016/05/30/hello/</link>
        <guid isPermaLink="true">/2016/05/30/hello/</guid>
        
        <category>生活</category>
        
        
      </item>
    
  </channel>
</rss>
